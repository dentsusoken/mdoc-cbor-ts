import { encodeCbor } from '@/cbor/codec';
import { createTag24 } from '@/cbor/createTag24';

/**
 * Parameters for calculating OID4VP session transcript bytes.
 */
export type CalculateOid4vpSessionTranscriptBytesParams = {
  /** The nonce generated by the mdoc (mobile document). */
  mdocNonce: string;
  /** The client ID for the OID4VP session. */
  clientId: string;
  /** The response URI for the OID4VP session. */
  responseUri: string;
  /** The nonce generated by the verifier. */
  verifierNonce: string;
};

/**
 * Calculates the session transcript bytes for OID4VP handover.
 *
 * This function encodes the OID4VP handover data as a CBOR Tag 24 structure,
 * with null values for DeviceEngagementBytes and EReaderKeyBytes, and an array
 * containing the mdocNonce, clientId, responseUri, and verifierNonce.
 *
 * @param params - The parameters required to construct the OID4VP session transcript.
 * @returns The encoded session transcript as a Uint8Array.
 */
export const calculateOid4vpSessionTranscriptBytes = ({
  mdocNonce,
  clientId,
  responseUri,
  verifierNonce,
}: CalculateOid4vpSessionTranscriptBytesParams): Uint8Array =>
  encodeCbor(
    createTag24([
      null, // DeviceEngagementBytes
      null, // EReaderKeyBytes
      [mdocNonce, clientId, responseUri, verifierNonce], // Handover = OID4VPHandover
    ])
  );
